{"version":3,"sources":["Components/Container/Container.js","Components/Searchbar/Searchbar.js","services/Apiservice.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Loader/Loader.js","Components/Modal/Modal.jsx","App.js","index.js"],"names":["Container","children","className","Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","type","onChange","autoComplete","autoFocus","placeholder","Component","fetchImagesWithQuery","searchQuery","currentPage","axios","get","then","responce","data","hits","propTypes","PropTypes","string","isRequired","number","ImageGalleryItem","webformatURL","largeImageURL","showModal","onClick","src","alt","ImageGallery","images","map","id","Button","override","css","Loader","loading","size","color","margin","React","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","event","target","handleClickOnImage","console","dir","nodeName","window","addEventListener","removeEventListener","createPortal","App","error","isLoading","onChangeQuery","fetchImages","options","Apiservice","prevState","catch","finally","toggleModal","log","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2e50e182.chunk.js","sourcesContent":["import React from 'react';\nimport './Container.scss';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import React, { Component } from 'react';\nimport './Searchbar.scss';\n\nclass Searchbar extends Component {\n  state = {\n    query: '',\n  };\n\n  handleChange = e => {\n    this.setState({ query: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            value={this.state.query}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\nexport default Searchbar;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst apiKey = '20214854-335f127fa955b7b4fdba968be';\nconst fetchImagesWithQuery = ({ searchQuery = '', currentPage = 1 }) => {\n  return axios\n    .get(\n      `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then(responce => responce.data.hits);\n};\n\nfetchImagesWithQuery.propTypes = {\n  searchQuery: PropTypes.string.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n\nexport default { fetchImagesWithQuery };\n","import PropTypes from 'prop-types';\nimport './ImageGalleryItem.scss';\n\nconst ImageGalleryItem = ({ webformatURL, largeImageURL, showModal }) => {\n  return (\n    <li onClick={() => showModal(largeImageURL)} className=\"ImageGalleryItem\">\n      <img\n        src={webformatURL}\n        alt={webformatURL}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  showModal: PropTypes.func.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport './ImageGallery.scss';\n\nconst ImageGallery = ({ images, showModal }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(({ id, webformatURL, largeImageURL }) => (\n        <ImageGalleryItem\n          key={id}\n          webformatURL={webformatURL}\n          largeImageURL={largeImageURL}\n          showModal={showModal}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  showModal: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  webformatURL: PropTypes.string,\n  largeImageURL: PropTypes.string,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport './Button.scss';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport { css } from '@emotion/core';\nimport SyncLoader from 'react-spinners/SyncLoader';\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  margin-top: 30px;\n`;\n\nclass Loader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"sweet-loading\">\n        <SyncLoader\n          css={override}\n          size={20}\n          color={'#303f9f'}\n          margin={5}\n          loading={this.state.loading}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Loader;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport './Modal.scss';\n\nconst modalRoot = document.querySelector('#modal');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  handleClickOnImage = event => {\n    console.dir(event.currentTarget);\n    if (event.currentTarget.nodeName === 'IMG') {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { largeImageURL } = this.props;\n    return createPortal(\n      <div className=\"Modal__backdrop\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal__content\">\n          <img\n            src={largeImageURL}\n            alt={largeImageURL}\n            onClick={this.handleClickOnImage}\n          />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import { Component } from 'react';\nimport Container from './Components/Container';\nimport Searchbar from './Components/Searchbar';\nimport Apiservice from '../src/services/Apiservice';\nimport ImageGallery from './Components/ImageGallery';\nimport Button from './Components/Button';\nimport Loader from './Components/Loader';\nimport Modal from './Components/Modal';\nimport './styles/base.scss';\nimport './App.scss';\n\nexport default class App extends Component {\n  state = {\n    images: [],\n    currentPage: 1,\n    error: null,\n    isLoading: false,\n    showModal: false,\n    largeImageURL: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  onChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      images: [],\n      error: null,\n    });\n  };\n\n  fetchImages = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = { searchQuery, currentPage };\n\n    this.setState({ isLoading: true });\n\n    Apiservice.fetchImagesWithQuery(options)\n      .then(images => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  toggleModal = largeImageURL => {\n    console.log(largeImageURL);\n    this.setState(state => ({\n      showModal: !state.showModal,\n      largeImageURL,\n    }));\n  };\n\n  render() {\n    const { showModal, images, isLoading, error, largeImageURL } = this.state;\n    return (\n      <Container>\n        <Searchbar onSubmit={this.onChangeQuery} />\n        {error && <h2>Opps! Something went wrong!</h2>}\n\n        {images.length > 0 && (\n          <ImageGallery showModal={this.toggleModal} images={images} />\n        )}\n        {showModal && (\n          <Modal onClose={this.toggleModal} largeImageURL={largeImageURL} />\n        )}\n        {isLoading && <Loader />}\n        {images.length > 0 && !isLoading && (\n          <Button onClick={this.fetchImages} />\n        )}\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}